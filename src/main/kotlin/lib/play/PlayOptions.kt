package lib.play

import lib.util.hashMapWithMultipleValues

private fun threeOfAKindGenerator(diceValue: Int): IPlay {
    return Play(true, diceValue * 100, hashMapWithMultipleValues(diceValue, 3), 3)
}

private fun threePairGenerator(firstDie: Int, secondDie: Int, thirdDie: Int): IPlay {
    val firstMultiple = hashMapWithMultipleValues(firstDie, 2)
    val secondMultiple = hashMapWithMultipleValues(secondDie, 2, firstMultiple)
    val thirdMultiple = hashMapWithMultipleValues(thirdDie, 2, secondMultiple)

    return Play(true, 500, thirdMultiple, 6)
}

private fun threePairGenerator(fourDie: Int, twoDie: Int): IPlay {
    val firstMultiple = hashMapWithMultipleValues(fourDie, 4)
    val secondMultiple = hashMapWithMultipleValues(twoDie, 2, firstMultiple)
    return Play(true, 500, secondMultiple, 6)
}

val farkle = Play(false, 0, hashMapOf(1 to 0, 2 to 0, 3 to 0, 4 to 0, 5 to 0, 6 to 0), 0)
val singleFive = Play(true, 50, hashMapWithMultipleValues(5, 1), 1)
val singleOne = Play(true, 100, hashMapWithMultipleValues(1, 1), 1)
val doubleFive = Play(true, 100, hashMapWithMultipleValues(5, 2), 2)
val doubleOne = Play(true, 200, hashMapWithMultipleValues(1, 2), 2)
val tripleOne = Play(true, 1000, hashMapWithMultipleValues(1, 3), 3)
val tripleTwo = threeOfAKindGenerator(2)
val tripleThree = threeOfAKindGenerator(3)
val tripleFour = threeOfAKindGenerator(4)
val tripleFive = threeOfAKindGenerator(5)
val tripleSix = threeOfAKindGenerator(6)
val largeStraight = Play(true, 1000, hashMapOf(1 to 1, 2 to 1, 3 to 1, 4 to 1, 5 to 1, 6 to 1), 6)
val pairsOneTwoThree = threePairGenerator(1, 2, 3)
val pairsOneTwoFour = threePairGenerator(1, 2, 4)
val pairsOneTwoFive = threePairGenerator(1, 2, 5)
val pairsOneTwoSix = threePairGenerator(1, 2, 6)
val pairsOneThreeFour = threePairGenerator(1, 3, 4)
val pairsOneThreeFive = threePairGenerator(1, 3, 5)
val pairsOneThreeSix = threePairGenerator(1, 3, 6)
val pairsOneFourFive = threePairGenerator(1, 4, 5)
val pairsOneFourSix = threePairGenerator(1, 4, 6)
val pairsOneFiveSix = threePairGenerator(1, 5, 6)
val pairsTwoThreeFour = threePairGenerator(2, 3, 4)
val pairsTwoThreeFive = threePairGenerator(2, 3, 5)
val pairsTwoThreeSix = threePairGenerator(2, 3, 6)
val pairsTwoFourFive = threePairGenerator(2, 4, 5)
val pairsTwoFourSix = threePairGenerator(2, 4, 6)
val pairsTwoFiveSix = threePairGenerator(2, 5, 6)
val pairsThreeFourFive = threePairGenerator(3, 4, 5)
val pairsThreeFourSix = threePairGenerator(3, 4, 6)
val pairsThreeFiveSix = threePairGenerator(3, 5, 6)
val pairsOneTwo = threePairGenerator(1, 2)
val pairsOneThree = threePairGenerator(1, 3)
val pairsOneFour = threePairGenerator(1, 4)
val pairsOneFive = threePairGenerator(1, 5)
val pairsOneSix = threePairGenerator(1, 6)
val pairsTwoThree = threePairGenerator(2, 3)
val pairsTwoFour = threePairGenerator(2, 4)
val pairsTwoFive = threePairGenerator(2, 5)
val pairsTwoSix = threePairGenerator(2, 6)
val pairsThreeFour = threePairGenerator(3, 4)
val pairsThreeFive = threePairGenerator(3, 5)
val pairsThreeSix = threePairGenerator(3, 6)
val pairsFourFive = threePairGenerator(4, 5)
val pairsFourSix = threePairGenerator(4, 6)
val pairsFiveSix = threePairGenerator(5, 6)
val pairsSixFive = threePairGenerator(6, 5)
val pairsSixFour = threePairGenerator(6, 4)
val pairsSixThree = threePairGenerator(6, 3)
val pairsSixTwo = threePairGenerator(6, 2)
val pairsSixOne = threePairGenerator(6, 1)
val pairsFiveFour = threePairGenerator(5, 4)
val pairsFiveThree = threePairGenerator(5, 3)
val pairsFiveTwo = threePairGenerator(5, 2)
val pairsFiveOne = threePairGenerator(5, 1)
val pairsFourThree = threePairGenerator(4, 3)
val pairsFourTwo = threePairGenerator(4, 2)
val pairsFourOne = threePairGenerator(4, 1)
val pairsThreeTwo = threePairGenerator(3, 2)
val pairsThreeOne = threePairGenerator(3, 1)
val pairsTwoOne = threePairGenerator(2, 1)
